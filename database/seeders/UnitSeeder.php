<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Unit;

class UnitSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        //
        Unit::create(['uom' => '-2', 'added_by' => 1]);
        Unit::create(['uom' => '( EU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Activity unit ( AU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Bag ( Bag )', 'added_by' => 1]);
        Unit::create(['uom' => 'Bottle ( Bt. )', 'added_by' => 1]);
        Unit::create(['uom' => 'Bushel ( BU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Canister ( Can )', 'added_by' => 1]);
        Unit::create(['uom' => 'Carton ( Car )', 'added_by' => 1]);
        Unit::create(['uom' => 'Case ( Case )', 'added_by' => 1]);
        Unit::create(['uom' => 'Crate ( Crate )', 'added_by' => 1]);
        Unit::create(['uom' => 'Degree ( deg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Dozen ( dz )', 'added_by' => 1]);
        Unit::create(['uom' => 'Drum ( Dr )', 'added_by' => 1]);
        Unit::create(['uom' => 'Enzyme Units / Milliliter ( EU/ml )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram Active Ingredient/To ( gai/To )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram Gold ( GAU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram Silver ( GAG )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram act. ingrd. ( gai )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gross ( gro )', 'added_by' => 1]);
        Unit::create(['uom' => 'Group proportion ( PrC )', 'added_by' => 1]);
        Unit::create(['uom' => 'International Unit ( IU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram act. ingrd. ( kgai )', 'added_by' => 1]);
        Unit::create(['uom' => 'MBL ( MBL )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milliliter act. ingr. ( mlai )', 'added_by' => 1]);
        Unit::create(['uom' => 'Moisture (Tonnes) ( YTM )', 'added_by' => 1]);
        Unit::create(['uom' => 'NJ Test ( NJ )', 'added_by' => 1]);
        Unit::create(['uom' => 'Number of Persons ( PRS )', 'added_by' => 1]);
        Unit::create(['uom' => 'PEICES ( PC )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pack ( PAK )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pair ( PAIR )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pallet ( PAL )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pices (EA) ( EA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pieces ( PCE )', 'added_by' => 1]);
        Unit::create(['uom' => 'Role ( ROL )', 'added_by' => 1]);
        Unit::create(['uom' => 'SCM ( SCM )', 'added_by' => 1]);
        Unit::create(['uom' => 'Thousands ( thou )', 'added_by' => 1]);
        Unit::create(['uom' => 'Ton Copper ( TCU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne Arsenic ( TAS )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne Ash ( YTA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne Dry ( YTDr )', 'added_by' => 1]);
        Unit::create(['uom' => 'Troy OncesTonne ( Toz )', 'added_by' => 1]);
        Unit::create(['uom' => 'Troy Oz / Tonne ( Tot )', 'added_by' => 1]);
        Unit::create(['uom' => 'Value-only material ( val )', 'added_by' => 1]);
        Unit::create(['uom' => 'each (ST) ( ST )', 'added_by' => 1]);
        Unit::create(['uom' => 'gram act.ingrd / liter ( gai/l )', 'added_by' => 1]);
        Unit::create(['uom' => 'kg act.ingrd. / kg ( kai/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meter/second squared ( m/s2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimol per liter ( mMol/l )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mol per cubic meter ( mol/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mol per liter ( Mol/l )', 'added_by' => 1]);
        Unit::create(['uom' => '-9', 'added_by' => 1]);
        Unit::create(['uom' => 'Acre ( acre )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gallons per mile (US) ( GPM US )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hectare ( Hectar )', 'added_by' => 1]);
        Unit::create(['uom' => 'Liter per 100 km ( l/hkm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square Yard ( yd2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square centimeter ( cm2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square foot ( ft2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square inch ( Inch2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square kilometer ( km2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square meter ( m2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square mile ( Mile2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square millimeter ( mm2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microsiemens per centimeter ( ?S/cm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Siemens per meter ( S/m )', 'added_by' => 1]);
        Unit::create(['uom' => '-10', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/Cubic meter ( g/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/cubic centimeter ( g/cm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/liter ( g/l )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Standard Cubic Foot ( kg/scf )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/US Barrel ( kg/bbl )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/cubic decimeter ( kg/dm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/cubic meter ( kg/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microgram/cubic meter ( ?g/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microgram/liter ( ?g/l )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milligram/cubic meter ( mg/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milligram/liter ( mg/l )', 'added_by' => 1]);
        Unit::create(['uom' => 'Ton/Cubic meter ( t/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne/1000 Cubic Meters ( t/tm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne/US Barrel ( t/bbl )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Pound/Standard Cubic Foot ( lb/scf )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Pound/US Gallon ( lb/gal )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Tonne/US Gallon ( ton/gl )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meterbar/second ( m.b_/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meterpascal/second ( m.Pa/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millipascal seconds ( mPa.s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pascal second ( Pas )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gigaohm ( GOhm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kiloohm ( kOhm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megohm ( MOhm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Ohm ( Ohm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Ampere ( A )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kiloampere ( kA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microampere ( ?A )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milliampere ( mA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Nanoampere ( nA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilovolt ( kV )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megavolt ( MV )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millivolt ( mV )', 'added_by' => 1]);
        Unit::create(['uom' => 'Volt ( V )', 'added_by' => 1]);
        Unit::create(['uom' => 'Farad ( F )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microfarad ( ?F )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millifarad ( mF )', 'added_by' => 1]);
        Unit::create(['uom' => 'Nanofarad ( nF )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pikofarad ( pF )', 'added_by' => 1]);
        Unit::create(['uom' => '-8', 'added_by' => 1]);
        Unit::create(['uom' => 'Gigajoule ( GJ )', 'added_by' => 1]);
        Unit::create(['uom' => 'Joule ( J )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilojoule ( kJ )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilowatt hours ( kwh )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megajoule ( MJ )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megawatt hour ( MWh )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millijoule ( mJ )', 'added_by' => 1]);
        Unit::create(['uom' => 'kilocalories ( KCAL )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilonewton ( ND )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meganewton ( MN )', 'added_by' => 1]);
        Unit::create(['uom' => 'Newton ( N )', 'added_by' => 1]);
        Unit::create(['uom' => '1/minute ( 1/min )', 'added_by' => 1]);
        Unit::create(['uom' => 'Bottles per minute ( BPM )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hertz (1/second) ( Hz )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilohertz ( kHz )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megahertz ( MHz )', 'added_by' => 1]);
        Unit::create(['uom' => 'RPM ( RPM )', 'added_by' => 1]);
        Unit::create(['uom' => 'Heat Conductivity ( W/mk )', 'added_by' => 1]);
        Unit::create(['uom' => 'Liter/Molsecond ( l/m_.s )', 'added_by' => 1]);
        Unit::create(['uom' => '1 / square meter ( 1/M2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Miles per gallon (US) ( MPG US )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square meter/second ( m2/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Square millimeter/second ( mm2/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Centimeter ( cm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Decimeter ( dm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Foot ( Foot )', 'added_by' => 1]);
        Unit::create(['uom' => 'Inch ( " )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilometer ( km )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meter ( m )', 'added_by' => 1]);
        Unit::create(['uom' => 'Micrometer ( ?m )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mile ( mile )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimeter ( mm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Nanometer ( nm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Yards ( yd )', 'added_by' => 1]);
        Unit::create(['uom' => 'Candela ( cd )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millitesla ( mT )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tesla ( D )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram ( g )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram ( ZE )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilotonne ( kt )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milligram ( mg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Ounce ( oz )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne ( t )', 'added_by' => 1]);
        Unit::create(['uom' => 'US pound ( lb )', 'added_by' => 1]);
        Unit::create(['uom' => 'US ton ( ton )', 'added_by' => 1]);
        Unit::create(['uom' => 'kg ( KG )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/square meter ( g/m2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Square meter ( kg/m2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milligram/Square centimeter ( mg/cm2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/second ( kg/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Joule ( kg/J )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Million BTU ( kg/MB )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne/British Thermal Unit ( t/Btu )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne/Joule ( t/Joul )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne/Terajoule ( t/TJ )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Pound/British Thermal Unit ( lb/Btu )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Pound/Million BTU ( lb/MB )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/hectogram ( g/hg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/kilogram ( g/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Kilogram ( kg/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/US Tonne ( kg/ton )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mass parts per billion ( ppb(m) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mass parts per million ( ppm(m) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mass parts per trillion ( ppt(m) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milligram/gram ( mg/g )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milligram/kilogram ( mg/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Percent mass ( %(m) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Permille mass ( %O(m) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Tonne/Tonne ( t/t )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Pound/US Tonne ( lb/ton )', 'added_by' => 1]);
        Unit::create(['uom' => 'Joule/Mol ( J/mol )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilojoule/Mol ( KJ/mol )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gram/Mol ( g/mol )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Kilogram Mole ( kg/kgm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilogram/Mol ( kg/mol )', 'added_by' => 1]);
        Unit::create(['uom' => 'US Pound/US Pound Mole ( lb/lbm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilomol ( kmol )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimol ( mmol )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mol ( mol )', 'added_by' => 1]);
        Unit::create(['uom' => '1/cubic centimeter ( 1/cm3 )', 'added_by' => 1]);
        Unit::create(['uom' => '1/cubic meter ( 1/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Permeation Rate ( ug/c2m )', 'added_by' => 1]);
        Unit::create(['uom' => 'Permeation Rate SI ( kg/m2s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Points ( P )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilovoltampere ( kVA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilowatt ( KW )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megavoltampere ( MVA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megawatt ( VA )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milliwatt ( mW )', 'added_by' => 1]);
        Unit::create(['uom' => 'Voltampere ( VAM )', 'added_by' => 1]);
        Unit::create(['uom' => 'Watt ( W )', 'added_by' => 1]);
        Unit::create(['uom' => 'British Thermal Unit/Cubic Ft ( Bt/ft3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'British Thermal Unit/US Barrel ( Bt/bbl )', 'added_by' => 1]);
        Unit::create(['uom' => 'British Thermal Unit/US Gallon ( Bt/gal )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gigajoule/1000 Cubic Meters ( GJ/tm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gigajoule/Cubic Meter ( GJ/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hectopascal ( hPa )', 'added_by' => 1]);
        Unit::create(['uom' => 'Joule/Cubic Meter ( J/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilopascal ( kPa )', 'added_by' => 1]);
        Unit::create(['uom' => 'Megapascal ( MPa )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millibar ( mbar )', 'added_by' => 1]);
        Unit::create(['uom' => 'Million BTU/US Barrel ( MB/bbl )', 'added_by' => 1]);
        Unit::create(['uom' => 'Newton/Square millimeter ( N/mm2 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pascal ( Pa )', 'added_by' => 1]);
        Unit::create(['uom' => 'bar ( bar )', 'added_by' => 1]);
        Unit::create(['uom' => 'One ( One )', 'added_by' => 1]);
        Unit::create(['uom' => 'Parts per billion ( ppb )', 'added_by' => 1]);
        Unit::create(['uom' => 'Parts per million ( ppm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Parts per trillion ( ppt )', 'added_by' => 1]);
        Unit::create(['uom' => 'Per mille ( %O )', 'added_by' => 1]);
        Unit::create(['uom' => 'Percentage ( % )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kelvin/Minute ( K/min )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kelvin/Second ( K/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Spec. Elec. Resistance ( Ohcm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Spec. Elec. Resistance ( Ohmm )', 'added_by' => 1]);
        Unit::create(['uom' => 'Spec. Heat Capacity ( J/kgK )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimol/gram ( mmol/g )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimol/kilogram ( m_/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Mol/kilogram ( mol/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Becquerel/kilogram ( Bq/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilobecquerel/kilogram ( kBq/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'British Thermal Unit/US Pound ( Btu/lb )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gigajoule/US Tonne ( GJ/ton )', 'added_by' => 1]);
        Unit::create(['uom' => 'Joule/Kilogram ( J/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilojoule/kilogram ( KJ/kg )', 'added_by' => 1]);
        Unit::create(['uom' => 'Million BTU/US Tonne ( MB/ton )', 'added_by' => 1]);
        Unit::create(['uom' => 'Centimeter/hour ( cm/h )', 'added_by' => 1]);
        Unit::create(['uom' => 'Centimeter/second ( cm/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kilometer/hour ( km/h )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meter/Hour ( m/h )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meter/Minute ( m/min )', 'added_by' => 1]);
        Unit::create(['uom' => 'Meter/second ( m/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimeter/hour ( mm/h )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimeter/second ( mm/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millimeter/year ( mm/a )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millinewton/meter ( mN/m )', 'added_by' => 1]);
        Unit::create(['uom' => 'Newton/meter ( N/m )', 'added_by' => 1]);
        Unit::create(['uom' => 'Degrees Celsius ( ・ｿｽ・ｿｽC )', 'added_by' => 1]);
        Unit::create(['uom' => 'Fahrenheit ( ・ｿｽ・ｿｽF )', 'added_by' => 1]);
        Unit::create(['uom' => 'Kelvin ( K )', 'added_by' => 1]);
        Unit::create(['uom' => 'AA ( AAAAAA )', 'added_by' => 1]);
        Unit::create(['uom' => '-1', 'added_by' => 1]);
        Unit::create(['uom' => 'Days ( Days )', 'added_by' => 1]);
        Unit::create(['uom' => 'Days ( d )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hour ( h )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hours ( HOU )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hours ( hrs )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microsecond ( ?s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Millisecond ( ms )', 'added_by' => 1]);
        Unit::create(['uom' => 'Minute ( min )', 'added_by' => 1]);
        Unit::create(['uom' => 'Months ( Months )', 'added_by' => 1]);
        Unit::create(['uom' => 'Nanosecond ( ns )', 'added_by' => 1]);
        Unit::create(['uom' => 'Picosecond ( ps )', 'added_by' => 1]);
        Unit::create(['uom' => 'Second ( s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Weeks ( Weeks )', 'added_by' => 1]);
        Unit::create(['uom' => 'Years ( yr )', 'added_by' => 1]);
        Unit::create(['uom' => 'Vaporization Speed ( kg/sm2 )', 'added_by' => 1]);
        Unit::create(['uom' => '-3', 'added_by' => 1]);
        Unit::create(['uom' => '-4', 'added_by' => 1]);
        Unit::create(['uom' => '-5', 'added_by' => 1]);
        Unit::create(['uom' => '-6', 'added_by' => 1]);
        Unit::create(['uom' => '-7', 'added_by' => 1]);
        Unit::create(['uom' => 'Centiliter ( Cl )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic centimeter ( cm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic decimeter ( dm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic foot ( ft3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic inch ( Inch3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic meter ( m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic millimeter ( mm3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic yard ( yd3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Fluid Ounce US ( foz US )', 'added_by' => 1]);
        Unit::create(['uom' => 'Hectoliter ( hl )', 'added_by' => 1]);
        Unit::create(['uom' => 'Liter ( l )', 'added_by' => 1]);
        Unit::create(['uom' => 'Microliter ( ?l )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milliliter ( ml )', 'added_by' => 1]);
        Unit::create(['uom' => 'Pint, US liquid ( pt US )', 'added_by' => 1]);
        Unit::create(['uom' => 'Quart, US liquid ( qt US )', 'added_by' => 1]);
        Unit::create(['uom' => 'US gallon ( gal US )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic meter/Cubic meter ( m3/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Milliliter/cubic meter ( ml/m3 )', 'added_by' => 1]);
        Unit::create(['uom' => 'Percent volume ( %(V) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Permille volume ( %O(V) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Volume parts per billion ( ppb(V) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Volume parts per million ( ppm(V) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Volume parts per trillion ( ppt(V) )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic centimeter/second ( cm3/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic meter/Hour ( m3/h )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic meter/day ( m3/d )', 'added_by' => 1]);
        Unit::create(['uom' => 'Cubic meter/second ( m3/s )', 'added_by' => 1]);
        Unit::create(['uom' => 'Gallons per hour (US) ( GPH US )', 'added_by' => 1]);
        Unit::create(['uom' => 'Liter per hour ( L/hr )', 'added_by' => 1]);
        Unit::create(['uom' => 'Liter/Minute ( l/min )', 'added_by' => 1]);
    }
}
